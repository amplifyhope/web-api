stages:
  - test
  - build
  - deploy:staging
  - deploy:production

variables:
  NODE_CONTAINER: node:18-alpine
  DOCKER_CONTAINER: docker:24.0.7

# test:unit:
#   stage: test
#   image: ${NODE_CONTAINER}
#   before_script:
#     - apk add --no-cache make g++ python3
#   script:
#     - yarn
#     - yarn test:unit

# test:snyk:
#   stage: test
#   image: ${NODE_CONTAINER}
#   script:
#     - npm install -g npm@latest
#     - npm install -g snyk
#     - snyk auth ${SNYK_TOKEN}
#     - snyk test --all-projects
#     - snyk code test
#   allow_failure: true

# build:
#   stage: build
#   image: ${DOCKER_CONTAINER}
#   services:
#     - ${DOCKER_CONTAINER}-dind
#   before_script:
#     - echo ${DOCKER_HUB_TOKEN} | docker login -u agiannellah --password-stdin
#   script:
#     - docker build 
#       -t agiannellah/ah-api:latest 
#       -t agiannellah/ah-api:${CI_COMMIT_SHORT_SHA} .
#     - docker push agiannellah/ah-api:latest
#     - docker push agiannellah/ah-api:${CI_COMMIT_SHORT_SHA}

deploy:common:
  stage: build
  image: alpine:latest
  environment: staging
  before_script:
    - 'command -v ssh-agent >/dev/null || ( apk add --update openssh )'
    - eval $(ssh-agent -s)
    - echo "$EC2_SSH_KEY" | tr -d '\r' | ssh-add -
    - mkdir -p ~/.ssh
    - chmod 700 ~/.ssh
    - ssh-keyscan $EC2_HOST >> ~/.ssh/known_hosts
    - chmod 644 ~/.ssh/known_hosts
  script:
    - ssh $EC2_USER@$EC2_HOST "hostname && echo 'Welcome!!!' > welcome.txt"
    - ssh $EC2_USER@$EC2_HOST "hostname && echo 'Welcome second!!!' > welcome2.txt"
    - ssh $EC2_USER@$EC2_HOST "hostname && echo 'Welcome third!!!' > welcome3.txt"

# deploy-staging:
#   stage: deploy:staging
#   environment:
#     name: staging
#   script:
#     - echo "Deploying to staging..."
#     - echo "Successfully deployed to staging"

# deploy-production:
#   stage: deploy:production
#   environment:
#     name: production
#   when: manual
#   script:
#     - echo "Deploying to production..."
#     - echo "Successfully deployed to production"

stages:
  - test
  - build
  - deploy:staging
  - deploy:production

variables:
  NODE_CONTAINER: node:18-alpine
  DOCKER_CONTAINER: docker:24.0.7

# test:unit:
#   stage: test
#   image: ${NODE_CONTAINER}
#   before_script:
#     - apk add --no-cache make g++ python3
#   script:
#     - yarn
#     - yarn test:unit

# test:snyk:
#   stage: test
#   image: ${NODE_CONTAINER}
#   script:
#     - npm install -g npm@latest
#     - npm install -g snyk
#     - snyk auth ${SNYK_TOKEN}
#     - snyk test --all-projects
#     - snyk code test
#   allow_failure: true

# build:
#   stage: build
#   image: ${DOCKER_CONTAINER}
#   services:
#     - ${DOCKER_CONTAINER}-dind
#   before_script:
#     - echo ${DOCKER_HUB_TOKEN} | docker login -u agiannellah --password-stdin
#   script:
#     - docker build 
#       -t agiannellah/ah-api:latest 
#       -t agiannellah/ah-api:${CI_COMMIT_SHORT_SHA} .
#     - docker push agiannellah/ah-api:latest
#     - docker push agiannellah/ah-api:${CI_COMMIT_SHORT_SHA}

deploy:common:
  stage: build
  image: alpine
  before_script:
    - apk add openssh-client
    - mkdir ~/.ssh
    - echo "$EC2_SSH_KEY" > ~/.ssh/id_ed25519
    - chmod 600 ~/.ssh/id_ed25519
  script:
    - echo ${EC2_USER}
    - echo ${EC2_HOST}
    - ssh -tt -i ~/.ssh/id_ed25519 ${EC2_USER}@${EC2_HOST}
    - touch test.txt

deploy-staging:
  stage: deploy:staging
  environment:
    name: staging
  script:
    - echo "Deploying to staging..."
    - echo "Successfully deployed to staging"

deploy-production:
  stage: deploy:production
  environment:
    name: production
  when: manual
  script:
    - echo "Deploying to production..."
    - echo "Successfully deployed to production"
